[global]
# DTY Type: either OpenDTU or AhoyDTU or None
dtu_type = None
# Smartmeter Type: either Smartmeter (generic, Tasmota, Hichi, ...), PowerOpti, ShellyEM3
smartmeter_type = Smartmeter
# use cloud instead of local MQTT
use_cloud = true
# charge from grid if insted of inverter
grid_charge = true

# Geolocation LAT/LNG
#latitude = 
#longitude =

[solarflow]
# The product ID specifies the model of Solarflow hub to use: Hub-1200: "73bkTV" Hub-2000: "A8yh63" Hyper-2000: "j2gW43Dh"
# defaults to 73bkTV
product_id = gDa3tb 
# The device ID of your Solarflow Hub (typically 8 characters), you can get these either with solarflow-bt-manager or the solarflow-statuspage
device_id = j2gW43Dh

# The time interval in hours that solarflow-control will try to ensure a full battery
# (i.e. no discharging if battry hasn't been at 100% for this long)
full_charge_interval = 32

# Let solarflow-control take over enabling/disabling the bypass of the hub (direct solarinput to hub output when battery is full)
# this overrides the automatic switching by the hub's firmware, which is sometimes a bit wierd
control_bypass = true

# allow solarflow-control to change the hubs min/max SoC levels if specified in this configuration in section [control] via battery_low and battery_high
control_soc = true

[cloudweb]
# Your Solarflow Cloud username and password
cloud_web_user = atrox06+zendureha@gmail.com
cloud_web_pwd = dSYU8l%d*qozu2^Dorz
token_url = https://app.zendure.tech/eu/auth/app/token
device_list_url = https://app.zendure.tech/eu/productModule/device/queryDeviceListByConsumerId

[cloudmqtt]
# Your Solarflow Cloud MQTT host configuration
cloud_mqtt_port = 1883
cloud_mqtt_host = mqtteu.zen-iot.com
cloud_mqtt_user = zenApp
cloud_mqtt_pwd = H6s$j9CtNa0N

[mqtt]
# Your local MQTT host configuration
mqtt_host = 192.168.160.5
mqtt_port = 1883
mqtt_user = solarflow
mqtt_pwd = 9sdjk69sda2937jre

[opendtu]
# The MQTT base topic your OpenDTU reports to (as configured in OpenDTU UI)
base_topic = solar
# your Inverters serial number
inverter_serial = 116491132532

# List of indices of the inverter channels/ports (as reported in the DTU) that the Solarflow Hub is connected to
# typically the index starts at 1 as 0 is the output channel of the inverter
# e.g. 1,3 or 3 or [1,3]
#sf_inverter_channels = [3]

#[ahoydtu]
# The MQTT base topic your AhoyDTU reports to (as configured in AhoyDTU UI)
#base_topic = solar
# The inverter ID in AhoyDTU: typically 0 for the first inverter
#inverter_id = 0
# List of indices of the inverter channels/ports (as reported in the DTU) that the Solarflow Hub is connected to
# typically the index starts at 1 as 0 is the output channel of the inverter
# e.g. 1,3 or 3 or [1,3]
#sf_inverter_channels = [3]

# the max output power of your inverter, used to calculate correct absolute values
#inverter_max_power = 2000

# The name of the inverter in AhoyDTU
#inverter_name = AhoyDTU

[smartmeter]
# The MQTT base topic your Hichi, Tasmota, generic smartmeter reader reports to
base_topic = homeassistant/sensor/solaredge_m1_ac_power/state
# if the published value at the base_topic is a JSON type then these accessors are used to get the power values
# e.g. if Smartmeter reader posts { "Power": {"Power_curr": 120, "Total_in": 12345.6} }
#cur_accessor = Power.Power_curr
#total_accessor = Power.Total_in
# rapid change difference defines the difference in W that has to be detected on the smartmeter readings to consider it a fast drop or rise in demand.
# this helps a faster adjustment in switching various limits e.g. when a water boiler is turned on/off
rapid_change_diff = 500
zero_offset = 20


#[poweropti]
# Username and password for you Powerfox API to get readings (internet connection required)
#poweropti_user = <PowerFox API user>
#poweropti_password = <Powerfox API password>
#rapid_change_diff = 500
#zero_offset = 20


#[shellyem3]
# The MQTT base topic your Shelly 3EM (Pro) is posting it's telemetry data to
# Note: you have to configure your Shelly to use MQTT
#base_topic = shellies/shellyem3/
#rapid_change_diff = 500
#zero_offset = 20

[control]
# The minimum and maximum power that the battery can be charged with
min_grid_charge_power = 100
max_grid_charge_power = 1200
min_charge_power = 125
max_discharge_power = 1200
max_inverter_limit = 0
max_inverter_input = 1600
limit_inverter = false
inverter_min_limit = 10
discharge_during_daytime = true
sunrise_offset = 60
sunset_offset = 60
battery_low = 10
battery_high = 100
